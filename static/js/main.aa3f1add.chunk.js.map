{"version":3,"sources":["components/category.js","common/utils.js","components/question_number.js","components/quiz.js","components/result.js","components/header.js","components/app.js","index.js"],"names":["Category","Component","render","React","createElement","className","Button","onClick","this","props","handleState","Icon","size","entities","formatString","str","replace","match","QuestionNumber","questionNumber","Quiz","constructor","super","state","questions","answerOptions","isLoading","currentQuestion","result","isSelected","chosen","correct","componentDidMount","getQuestions","fetch","concat","categoryNum","then","res","json","data","arr","shuffle","results","incorrect_answers","correct_answer","map","item","push","option","answer","setState","isLastQuestion","catch","console","log","handleAnswer","setTimeout","_objectSpread","answerCssId","question","index","id","key","QuizResult","Progress","Object","assign","value","total","progress","variant","QuizHeader","App","display","bind","error","warning","success","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aa3f1add.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Button, Icon } from 'semantic-ui-react'\nimport 'semantic-ui-css/semantic.min.css'\n\nclass Category extends Component {\n  render () {\n    return (\n      <div className='component-container'>\n        <h4 className='subtitle'>Select a category</h4>\n        <div className='component-grid'>\n          <Button className='quiz-buttons' onClick={()=>this.props.handleState('quiz', 11)}><Icon className='film icon' size='large'/>Film</Button>\n          <Button className='quiz-buttons' onClick={()=>this.props.handleState('quiz', 22)}><Icon className='world icon' size='large'/>Geography</Button>\n          <Button className='quiz-buttons' onClick={()=>this.props.handleState('quiz', 14)}><Icon className='television icon' size='large'/>Television</Button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Category\n","export const entities = {\n  '&#039;': '\\'',\n  '&quot;': '\"',\n  '&ldquo;': '\"',\n  '&hellip;': '...',\n  '&rdquo;': '\"'\n}\n\nconst formatString = (str) => str.replace(/&#?\\w+;/gi, match => entities[match])\nexport default formatString\n","import React, { Component } from 'react'\n\nclass QuestionNumber extends Component {\n  render () {\n    return <h3>Question {this.props.questionNumber}/10</h3>\n  }\n}\n\nexport default QuestionNumber\n","import React, { Component } from 'react'\nimport { Button, Icon } from 'semantic-ui-react'\nimport 'semantic-ui-css/semantic.min.css'\nimport formatString from '../common/utils.js'\nimport shuffle from 'shuffle-array'\nimport QuestionNumber from './question_number.js'\n\nclass Quiz extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      questions: [],\n      answerOptions: [],\n      isLoading: true,\n      currentQuestion: 0,\n      result: 0,\n      isSelected: false,\n      chosen: '',\n      correct: ''\n    }\n  }\n\n  componentDidMount () {\n    this.getQuestions()\n  }\n\n  getQuestions () {\n    fetch(`https://opentdb.com/api.php?amount=10&category=${this.props.categoryNum}&type=multiple`)\n      .then(res => res.json())\n      .then((data) => {\n        const arr = []\n        const options = shuffle([...data.results[this.state.currentQuestion].incorrect_answers, data.results[this.state.currentQuestion].correct_answer])\n        options.map(item => {\n          arr.push({ option: item, answer: (item === data.results[this.state.currentQuestion].correct_answer) })\n        })\n        this.setState({\n          questions: data,\n          answerOptions: arr,\n          isLoading: false,\n          isLastQuestion: false\n        })\n      })\n      .catch(console.log)\n  }\n\n  handleAnswer (chosen, correct) {\n    this.setState({ isSelected: true, chosen: chosen, correct: correct })\n    if (chosen === correct) {\n      this.setState({ result: this.state.result + 1 })\n    }\n\n    setTimeout(() => {\n     if (this.state.currentQuestion !== 9) {\n        const arr = []\n        const options = shuffle([...this.state.questions.results[this.state.currentQuestion + 1].incorrect_answers, this.state.questions.results[this.state.currentQuestion + 1].correct_answer])\n        options.map(item => {\n          arr.push({ option: item, answer: (item === this.state.questions.results[this.state.currentQuestion + 1].correct_answer) })\n        })\n        this.setState({\n          currentQuestion: this.state.currentQuestion + 1,\n          answerOptions: arr,\n          isSelected: false\n        })\n      } else {\n        this.setState({ isLastQuestion: true })\n      }\n    }, 2500)\n  }\n\n  render () {\n    if (this.state.isLoading) {\n      return (\n        <div>\n          <Icon className='spinner icon' size='big'/><br/>\n          <p>Loading</p>\n        </div>\n      )\n    }\n\n    if (this.state.isLastQuestion) {\n      this.props.handleState('result', null, this.state.result)\n    }\n\n    if (this.state.isSelected) {\n      this.state.answerOptions = this.state.answerOptions.map(item => {\n        if (this.state.chosen === item.option) {\n          return { ...item, answerCssId: (item.answer) ? 'correct-answer' : 'incorrect-answer' }\n        } else if (item.option === this.state.correct) {\n          return { ...item, answerCssId: 'correct-answer' }\n        } else {\n          return { ...item }\n        }\n      })\n\n      return (\n        <div className='component-container'>\n          <QuestionNumber\n            questionNumber={this.state.currentQuestion + 1} />\n          <h4>{formatString(this.state.questions.results[this.state.currentQuestion].question)}</h4>\n          <div className='component-grid'>\n            {this.state.answerOptions.map((item, index) =>\n              <Button className='quiz-buttons' id={item.answerCssId} key={index}>{formatString(item.option)}</Button>\n            )}\n          </div>\n        </div>\n      )\n    }\n\n    return (\n      <div className='component-container'>\n        <QuestionNumber\n          questionNumber={this.state.currentQuestion + 1} />\n        <h4>{formatString(this.state.questions.results[this.state.currentQuestion].question)}</h4>\n        <div className='component-grid'>\n          {this.state.answerOptions.map((item, index) =>\n            <Button className='quiz-buttons' onClick={()=>this.handleAnswer(formatString(item.option), formatString(this.state.questions.results[this.state.currentQuestion].correct_answer))} key={index}>{formatString(item.option)}</Button>\n          )}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Quiz\n","import React, { Component } from 'react'\nimport { Button, Icon, Progress } from 'semantic-ui-react'\n\nclass QuizResult extends Component{\n  render () {\n    return (\n      <div className='component-container'>\n        <h3 className='subtitle'>Result</h3>\n        <Progress value={this.props.result.result} total='10' progress='ratio' {...this.props.result.variant}>\n          You got {this.props.result.result} out of 10 answers correct\n        </Progress>\n        <Button className='quiz-buttons' onClick={()=>this.props.handleState('category')}><Icon className='redo icon'/>Take Quiz Again</Button>\n      </div>\n    )\n  }\n}\n\nexport default QuizResult\n","import React from 'react'\n\nexport const QuizHeader = () => {\n  return (\n    <div className='header'>\n      <h1 className='title'>Quiz App</h1>\n    </div>\n  )\n}\n\nexport default QuizHeader\n","import React, { Component } from 'react'\nimport Category from './category.js'\nimport Quiz from './quiz.js'\nimport QuizResult from './result.js'\nimport QuizHeader from './header.js'\n\nclass App extends Component {\n  constructor (props) {\n    super(props)\n    this.state = { display: 'category' }\n    this.handleState = this.handleState.bind(this)\n  }\n\n  handleState (display, categoryNum, result) {\n    this.setState({\n      display: display,\n      categoryNum: categoryNum,\n      result: result\n    })\n  }\n\n  render () {\n    if (this.state.display === 'category' ) {\n      return (\n        <div className='container'>\n          <QuizHeader/><br/>\n          <Category handleState={this.handleState}/>\n        </div>\n      )\n    }\n\n    if (this.state.display === 'quiz') {\n      return (\n        <div className='container'>\n          <QuizHeader/><br/>\n          <Quiz handleState={this.handleState} categoryNum={this.state.categoryNum}/>\n        </div>\n      )\n    }\n\n    if (this.state.display === 'result') {\n      const result = {\n        result: this.state.result\n      }\n      if (this.state.result <= 2) {\n        result.variant = { error: 'error' }\n      } else if (this.state.result <= 5) {\n        result.variant = { warning: 'warning' }\n      } else {\n        result.variant = { success: 'success' }\n      }\n\n      return (\n        <div className='container'>\n          <QuizHeader/><br/>\n          <QuizResult handleState={this.handleState} result={result}/>\n        </div>\n      )\n    }\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './css/stylesheet.css'\nimport App from './components/app.js'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n"],"sourceRoot":""}