{"version":3,"sources":["components/category.js","common/utils.js","components/answer.js","components/quiz.js","components/result.js","components/header.js","components/app.js","index.js"],"names":["Category","className","Button","onClick","props","handleState","Icon","size","Component","entities","formatString","str","replace","match","Answer","this","chosen","correct","id","Quiz","state","questions","answerOptions","isLoading","currentQuestion","result","isSelected","getQuestions","fetch","categoryNum","then","res","json","data","setState","shuffle","results","incorrect_answers","correct_answer","isLastQuestion","catch","console","log","setTimeout","question","map","item","index","handleAnswer","key","QuizResult","QuizHeader","App","display","bind","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3d610816.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Button, Icon } from 'semantic-ui-react'\nimport 'semantic-ui-css/semantic.min.css'\n\nclass Category extends Component {\n  render () {\n    return (\n      <div className='category'>\n        <h4>Select a category</h4>\n        <Button className='quiz-buttons' onClick={()=>this.props.handleState('quiz', 11)}><Icon className='film icon' size='large'/>Film</Button><p></p>\n        <Button className='quiz-buttons' onClick={()=>this.props.handleState('quiz', 22)}><Icon className='world icon' size='large'/>Geography</Button><p></p>\n        <Button className='quiz-buttons' onClick={()=>this.props.handleState('quiz', 14)}><Icon className='television icon' size='large'/>Television</Button>\n      </div>\n    )\n  }\n}\n\nexport default Category\n","export const entities = {\n  '&#039;': '\\'',\n  '&quot;': '\"',\n  '&ldquo;': '\"',\n  '&hellip;': '...',\n  '&rdquo;': '\"'\n}\n\nconst formatString = (str) => str.replace(/&#?\\w+;/gi, match => entities[match])\nexport default formatString\n","import React, { Component } from 'react'\nimport { Button } from 'semantic-ui-react'\nimport 'semantic-ui-css/semantic.min.css'\n\nclass Answer extends Component {\n  constructor (props) {\n    super(props)\n  }\n\n  render () {\n    if (this.props.chosen !== this.props.correct) {\n      return (\n        <div>\n          {this.props.chosen !== this.props.correct}\n          <Button id='incorrect-answer' className='quiz-buttons'>{this.props.chosen}</Button>\n          <Button id='correct-answer' className='quiz-buttons'>{this.props.correct}</Button>\n        </div>\n      )\n    }\n\n    return (\n      <div>\n        <Button id='correct-answer' className='quiz-buttons'>{this.props.correct}</Button>\n      </div>\n    )\n  }\n}\n\nexport default Answer\n","import React, { Component } from 'react'\nimport { Button, Icon } from 'semantic-ui-react'\nimport 'semantic-ui-css/semantic.min.css'\nimport formatString from '../common/utils.js'\nimport shuffle from 'shuffle-array'\nimport Answer from './answer.js'\n\nclass Quiz extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      questions: [],\n      answerOptions: [],\n      isLoading: true,\n      currentQuestion: 0,\n      result: 0,\n      isSelected: false,\n      chosen: '',\n      correct: ''\n    }\n  }\n\n  componentDidMount () {\n    this.getQuestions()\n  }\n\n  getQuestions () {\n    fetch(`https://opentdb.com/api.php?amount=10&category=${this.props.categoryNum}&type=multiple`)\n      .then(res => res.json())\n      .then((data) => {\n        this.setState({\n          questions: data,\n          answerOptions: shuffle([...data.results[this.state.currentQuestion].incorrect_answers, data.results[this.state.currentQuestion].correct_answer]),\n          isLoading: false,\n          isLastQuestion: false\n        })\n      })\n      .catch(console.log)\n  }\n\n  handleAnswer (chosen, correct) {\n    this.setState({ isSelected: true, chosen: chosen, correct: correct })\n    if (chosen === correct) {\n      this.setState({ result: this.state.result + 1 })\n    }\n\n    setTimeout(() => {\n     if (this.state.currentQuestion !== 9) {\n        this.setState({\n         currentQuestion: this.state.currentQuestion + 1,\n          answerOptions: shuffle([...this.state.questions.results[this.state.currentQuestion + 1].incorrect_answers, this.state.questions.results[this.state.currentQuestion + 1].correct_answer]),\n          isSelected: false\n        })\n      } else {\n        this.setState({ isLastQuestion: true })\n      }\n    }, 2500)\n  }\n\n  render () {\n    if (this.state.isLoading) {\n      return (\n        <div>\n          <Icon className='spinner icon' size='big'/><br/>\n          <p>Loading</p>\n        </div>\n      )\n    }\n\n    if (this.state.isLastQuestion) {\n      this.props.handleState('result', null, this.state.result)\n    }\n\n    if (this.state.isSelected) {\n      return (\n        <div>\n          <h4>{formatString(this.state.questions.results[this.state.currentQuestion].question)}</h4>\n          <Answer\n                chosen={this.state.chosen}\n                correct={this.state.correct} />\n        </div>\n      )\n    }\n\n    return (\n      <div>\n        <h4>{formatString(this.state.questions.results[this.state.currentQuestion].question)}</h4>\n          {this.state.answerOptions.map((item, index) =>\n            <Button className='quiz-buttons' onClick={()=>this.handleAnswer(formatString(item), formatString(this.state.questions.results[this.state.currentQuestion].correct_answer))} key={index}>{formatString(item)}</Button>\n          )}\n      </div>\n    )\n  }\n}\n\nexport default Quiz\n","import React, { Component } from 'react'\nimport { Button, Icon } from 'semantic-ui-react'\n\nclass QuizResult extends Component{\n  render () {\n    return (\n      <div>\n        <h5>{`Quiz Result: ${this.props.result}/10`}</h5>\n        <Button className='quiz-buttons' onClick={()=>this.props.handleState('category')}><Icon className='redo icon'/>Take Quiz Again</Button>\n      </div>\n    )\n  }\n}\n\nexport default QuizResult\n","import React from 'react'\n\nexport const QuizHeader = () => {\n  return (\n    <div className='header'>\n      <h1>Quiz App</h1>\n    </div>\n  )\n}\n\nexport default QuizHeader\n","import React, { Component } from 'react'\nimport Category from './category.js'\nimport Quiz from './quiz.js'\nimport QuizResult from './result.js'\nimport QuizHeader from './header.js'\n\nclass App extends Component {\n  constructor (props) {\n    super(props)\n    this.state = { display: 'category' }\n    this.handleState = this.handleState.bind(this)\n  }\n\n  handleState (display, categoryNum, result) {\n    this.setState({\n      display: display,\n      categoryNum: categoryNum,\n      result: result\n    })\n  }\n\n  render () {\n    if (this.state.display === 'category' ) {\n      return (\n        <div className='container'>\n          <QuizHeader/><br/>\n          <Category handleState={this.handleState}/>\n        </div>\n      )\n    }\n\n    if (this.state.display === 'quiz') {\n      return (\n        <div className='container'>\n          <QuizHeader/><br/>\n          <Quiz handleState={this.handleState} categoryNum={this.state.categoryNum}/>\n        </div>\n      )\n    }\n\n    if (this.state.display === 'result') {\n      return (\n        <div className='container'>\n          <QuizHeader/><br/>\n          <QuizResult handleState={this.handleState} result={this.state.result}/>\n        </div>\n      )\n    }\n  }\n\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './css/stylesheet.css'\nimport App from './components/app.js'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n"],"sourceRoot":""}